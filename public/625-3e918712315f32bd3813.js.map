{"version":3,"file":"625-3e918712315f32bd3813.js","mappings":"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","sources":["webpack://portfolio/./node_modules/react-ui-scrollspy/dist/index.js"],"sourcesContent":["Object.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespace(React);\n\nvar throttle = function (callback, limit) {\r\n    var tick = false;\r\n    return function () {\r\n        if (!tick) {\r\n            callback();\r\n            tick = true;\r\n            setTimeout(function () {\r\n                tick = false;\r\n            }, limit);\r\n        }\r\n    };\r\n};\n\nvar ScrollSpy = function (_a) {\r\n    var _b;\r\n    var children = _a.children, \r\n    // refs\r\n    navContainerRef = _a.navContainerRef, parentScrollContainerRef = _a.parentScrollContainerRef, \r\n    // throttle\r\n    _c = _a.scrollThrottle, \r\n    // throttle\r\n    scrollThrottle = _c === void 0 ? 300 : _c, \r\n    // callback\r\n    onUpdateCallback = _a.onUpdateCallback, \r\n    // offsets\r\n    _d = _a.offsetTop, \r\n    // offsets\r\n    offsetTop = _d === void 0 ? 0 : _d, _e = _a.offsetBottom, offsetBottom = _e === void 0 ? 0 : _e, \r\n    // customize attributes\r\n    _f = _a.useDataAttribute, \r\n    // customize attributes\r\n    useDataAttribute = _f === void 0 ? \"to-scrollspy-id\" : _f, _g = _a.activeClass, activeClass = _g === void 0 ? \"active-scroll-spy\" : _g, _h = _a.useBoxMethod, useBoxMethod = _h === void 0 ? true : _h, _j = _a.updateHistoryStack, updateHistoryStack = _j === void 0 ? true : _j;\r\n    var scrollContainerRef = React.useRef(null);\r\n    var _k = React.useState(), navContainerItems = _k[0], setNavContainerItems = _k[1]; // prettier-ignore\r\n    // keeps track of the Id in navcontainer which is active\r\n    // so as to not update classLists unless it has been updated\r\n    var prevIdTracker = React.useRef(\"\");\r\n    // Fix Gatsby error\r\n    React.useEffect(function () {\r\n        if (typeof window === undefined) {\r\n            return;\r\n        }\r\n    }, []);\r\n    // To get the nav container items depending on whether the parent ref for the nav container is passed or not\r\n    React.useEffect(function () {\r\n        var _a;\r\n        navContainerRef\r\n            ? setNavContainerItems((_a = navContainerRef.current) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\"[data-\" + useDataAttribute + \"]\"))\r\n            : setNavContainerItems(document.querySelectorAll(\"[data-\" + useDataAttribute + \"]\"));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [navContainerRef]);\r\n    // fire once after nav container items are set\r\n    React.useEffect(function () {\r\n        checkAndUpdateActiveScrollSpy();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [navContainerItems]);\r\n    var isVisible = function (el) {\r\n        var rectInView = el.getBoundingClientRect();\r\n        if (useBoxMethod) {\r\n            var useHeight = (parentScrollContainerRef === null || parentScrollContainerRef === void 0 ? void 0 : parentScrollContainerRef.current)\r\n                ? parentScrollContainerRef === null || parentScrollContainerRef === void 0 ? void 0 : parentScrollContainerRef.current.offsetHeight\r\n                : window.innerHeight;\r\n            var hitbox_top = useHeight;\r\n            var element_top = rectInView.top;\r\n            var element_bottom = rectInView.top + useHeight;\r\n            return (hitbox_top < element_bottom + offsetBottom &&\r\n                hitbox_top > element_top - offsetTop);\r\n        }\r\n        else {\r\n            // this decides how much of the element should be visible\r\n            var leniency = (parentScrollContainerRef === null || parentScrollContainerRef === void 0 ? void 0 : parentScrollContainerRef.current)\r\n                ? (parentScrollContainerRef === null || parentScrollContainerRef === void 0 ? void 0 : parentScrollContainerRef.current.offsetHeight) * 0.5\r\n                : window.innerHeight * 0.5;\r\n            var useHeight = (parentScrollContainerRef === null || parentScrollContainerRef === void 0 ? void 0 : parentScrollContainerRef.current)\r\n                ? parentScrollContainerRef === null || parentScrollContainerRef === void 0 ? void 0 : parentScrollContainerRef.current.offsetHeight\r\n                : window.innerHeight;\r\n            return (rectInView.top + leniency + offsetTop >= 0 &&\r\n                rectInView.bottom - leniency - offsetBottom <= useHeight);\r\n        }\r\n    };\r\n    var checkAndUpdateActiveScrollSpy = function () {\r\n        var scrollParentContainer = scrollContainerRef.current;\r\n        // if there are no children, return\r\n        if (!(scrollParentContainer && navContainerItems))\r\n            return;\r\n        var _loop_1 = function (i) {\r\n            // get child element\r\n            var useChild = scrollParentContainer.children.item(i);\r\n            var elementIsVisible = isVisible(useChild);\r\n            // check if the element is in the viewport\r\n            if (elementIsVisible) {\r\n                // if so, get its ID\r\n                var changeHighlightedItemId_1 = useChild.id;\r\n                // if the element was same as the one currently active ignore it\r\n                if (prevIdTracker.current === changeHighlightedItemId_1)\r\n                    return { value: void 0 };\r\n                // now loop over each element in the nav Container\r\n                navContainerItems.forEach(function (el) {\r\n                    var attrId = el.getAttribute(\"data-\" + useDataAttribute);\r\n                    // if the element contains 'active' the class remove it\r\n                    if (el.classList.contains(activeClass)) {\r\n                        el.classList.remove(activeClass);\r\n                    }\r\n                    // check if its ID matches the ID we got from the viewport\r\n                    // also make sure it does not already contain the 'active' class\r\n                    if (attrId === changeHighlightedItemId_1 &&\r\n                        !el.classList.contains(activeClass)) {\r\n                        el.classList.add(activeClass);\r\n                        if (onUpdateCallback) {\r\n                            onUpdateCallback(changeHighlightedItemId_1);\r\n                        }\r\n                        prevIdTracker.current = changeHighlightedItemId_1;\r\n                        if (updateHistoryStack) {\r\n                            window.history.pushState({}, \"\", \"#\" + changeHighlightedItemId_1);\r\n                        }\r\n                    }\r\n                });\r\n                return \"break\";\r\n            }\r\n        };\r\n        // loop over all children in scroll container\r\n        for (var i = 0; i < scrollParentContainer.children.length; i++) {\r\n            var state_1 = _loop_1(i);\r\n            if (typeof state_1 === \"object\")\r\n                return state_1.value;\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    // listen for scroll event\r\n    parentScrollContainerRef\r\n        ? // if ref for scrollable div is provided\r\n            (_b = parentScrollContainerRef.current) === null || _b === void 0 ? void 0 : _b.addEventListener(\"scroll\", throttle(checkAndUpdateActiveScrollSpy, scrollThrottle))\r\n        : // else listen for scroll in window\r\n            window.addEventListener(\"scroll\", throttle(checkAndUpdateActiveScrollSpy, scrollThrottle));\r\n    return React__namespace.createElement(\"div\", { ref: scrollContainerRef }, children);\r\n};\n\nexports[\"default\"] = ScrollSpy;\n//# sourceMappingURL=index.js.map\n"],"names":["Object","defineProperty","exports","value","React","_interopNamespace","e","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","React__namespace","throttle","callback","limit","tick","setTimeout","_a","_b","children","navContainerRef","parentScrollContainerRef","_c","scrollThrottle","onUpdateCallback","_d","offsetTop","_e","offsetBottom","_f","useDataAttribute","_g","activeClass","_h","useBoxMethod","_j","updateHistoryStack","scrollContainerRef","useRef","_k","useState","navContainerItems","setNavContainerItems","prevIdTracker","useEffect","current","querySelectorAll","document","checkAndUpdateActiveScrollSpy","scrollParentContainer","_loop_1","i","useChild","item","el","rectInView","getBoundingClientRect","hitbox_top","useHeight","offsetHeight","window","innerHeight","element_top","top","leniency","bottom","isVisible","changeHighlightedItemId_1","id","attrId","getAttribute","classList","contains","remove","add","history","pushState","length","state_1","addEventListener","createElement","ref"],"sourceRoot":""}